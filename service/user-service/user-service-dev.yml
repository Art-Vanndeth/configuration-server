spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://127.0.0.1:9090
  data:
    mongodb:
      uri: mongodb://202.178.125.77:5403/db-user
    producer:
      bootstrap-servers:
        - 127.0.0.1:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      bootstrap-servers:
        - 127.0.0.1:9092
      group-id: user-service
      auto-offset-reset: earliest
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: dev.dcoder.userservice.config.kafka.BaseProducerDeserializer
#      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: '*'
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
##        spring.json.value.default.type: istad.codeadvisor.userservice.config.kafka.producer.ContentProducer
        spring.json.value.default.type: dev.dcoder.userservice.config.kafka.producer.BaseProducer
#handle file size
  servlet:
    multipart:
      max-request-size: 10MB
      max-file-size: 5MB
eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

server:
  port: 8085
